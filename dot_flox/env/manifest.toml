## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
bat.pkg-path = "bat"
carapace.pkg-path = "carapace"
diff-so-fancy.pkg-path = "diff-so-fancy"
direnv.pkg-path = "direnv"
eza.pkg-path = "eza"
fish.pkg-path = "fish"
fzf.pkg-path = "fzf"
gh.pkg-path = "gh"
git.pkg-path = "git"
neovim.pkg-path = "neovim"
nix-your-shell.pkg-path = "nix-your-shell"
starship.pkg-path = "starship"
stow.pkg-path = "stow"
trash-cli.pkg-path = "trash-cli"
trash-cli.systems = ["aarch64-linux", "x86_64-linux"]
xsel.pkg-path = "xsel"
xsel.systems = ["aarch64-linux", "x86_64-linux"]
zoxide.pkg-path = "zoxide"
htop.pkg-path = "htop"
lm_sensors.pkg-path = "lm_sensors"
lm_sensors.systems = ["aarch64-linux", "x86_64-linux"]
diffoscopeMinimal.pkg-path = "diffoscopeMinimal"
ack.pkg-path = "ack"
btop.pkg-path = "btop"
distrobox.pkg-path = "distrobox"
distrobox.systems = ["aarch64-linux", "x86_64-linux"]
dos2unix.pkg-path = "dos2unix"
fx.pkg-path = "fx"
ghorg.pkg-path = "ghorg"
gnumake.pkg-path = "gnumake"
ipcalc.pkg-path = "ipcalc"
ncdu.pkg-path = "ncdu"
ripgrep.pkg-path = "ripgrep"
shellcheck.pkg-path = "shellcheck"
ruby.pkg-path = "ruby"
nodejs.pkg-path = "nodejs"
sshpass.pkg-path = "sshpass"
tealdeer.pkg-path = "tealdeer"
podman.pkg-path = "podman"
podman.systems = ["aarch64-linux", "x86_64-linux"]
stylua.pkg-path = "stylua"
yubikey-manager.pkg-path = "yubikey-manager"
act.pkg-path = "act"
devpod.pkg-path = "devpod"
chezmoi.pkg-path = "chezmoi"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
# on-activate = '''
#   # -> Set variables, create files and directories
#   # -> Perform initialization steps, e.g. create a python venv
#   # -> Useful environment variables:
#   #      - FLOX_ENV_PROJECT=/home/user/example
#   #      - FLOX_ENV=/home/user/example/.flox/run
#   #      - FLOX_ENV_CACHE=/home/user/example/.flox/cache
# '''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
# common = '''
#   gum style \
#   --foreground 212 --border-foreground 212 --border double \
#   --align center --width 50 --margin "1 2" --padding "2 4" \
#     $INTRO_MESSAGE
# '''
## Shell specific profiles go here:
# bash = ...
# zsh  = ...
#fish =  """
#"""


## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-linux",
  "x86_64-linux",
  "aarch64-darwin",
  "x86_64-darwin",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false
